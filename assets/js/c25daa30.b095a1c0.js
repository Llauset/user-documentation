"use strict";(self.webpackChunkmesodocs=self.webpackChunkmesodocs||[]).push([[11],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=i.createContext({}),p=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(u.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=p(n),d=a,f=s["".concat(u,".").concat(d)]||s[d]||m[d]||o;return n?i.createElement(f,r(r({ref:t},c),{},{components:n})):i.createElement(f,r({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[s]="string"==typeof e?e:a,r[1]=l;for(var p=2;p<o;p++)r[p]=n[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1900:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var i=n(7462),a=(n(7294),n(4137));const o={title:"NEON",sidebar_position:5},r=void 0,l={unversionedId:"arch_exp/turpan/performance/neon",id:"arch_exp/turpan/performance/neon",title:"NEON",description:"Compilateur GNU avec Neon pour Armv8-A",source:"@site/docs/arch_exp/turpan/performance/neon.md",sourceDirName:"arch_exp/turpan/performance",slug:"/arch_exp/turpan/performance/neon",permalink:"/documentation/user-documentation/arch_exp/turpan/performance/neon",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"NEON",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"NSIGHT",permalink:"/documentation/user-documentation/arch_exp/turpan/performance/nsight"},next:{title:"Description",permalink:"/documentation/user-documentation/arch_exp/boreal/description"}},u={},p=[{value:"Compilateur GNU avec Neon pour Armv8-A",id:"compilateur-gnu-avec-neon-pour-armv8-a",level:2},{value:"Compilateur Arm avec Neon pour Armv8-A",id:"compilateur-arm-avec-neon-pour-armv8-a",level:2},{value:"Compilateur NVHPC avec Neon pour Armv8-A",id:"compilateur-nvhpc-avec-neon-pour-armv8-a",level:2}],c={toc:p},s="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"compilateur-gnu-avec-neon-pour-armv8-a"},"Compilateur GNU avec Neon pour Armv8-A"),(0,a.kt)("p",null,"Options d'optimisation :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"-Ox avec x dans {0, 1, 2, 3, fast}"),(0,a.kt)("li",{parentName:"ul"},"La g\xe9n\xe9ration de code SIMD est activ\xe9e par d\xe9faut au niveau d'optimisation -O2 et sup\xe9rieur."),(0,a.kt)("li",{parentName:"ul"},"Au niveau d'optimisation -O1, r\xe9duire la taille du code et le temps d'ex\xe9cution."),(0,a.kt)("li",{parentName:"ul"},"Au niveau d'optimisation -O0, aucune optimisation n'est effectu\xe9e. R\xe9duisez le temps de compilation et faites en sorte que le d\xe9bogage produise les r\xe9sultats attendus. Il s'agit de la valeur par d\xe9faut."),(0,a.kt)("li",{parentName:"ul"},"-fopt-info-optimized -fopt-info-missed -fopt-info-all -fopt-info-vec-optimized -fopt-info-vec-missed pour imprimer des informations sur les optimisations effectu\xe9es ou manqu\xe9es.")),(0,a.kt)("p",null,"Sp\xe9cifiez la cible Neon :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"-mcpu=native|neovere-n1 pour cibler Arm Ampere Altra.")),(0,a.kt)("p",null,"Plus d'informations ici :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html"},"https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html"),"  ")),(0,a.kt)("h2",{id:"compilateur-arm-avec-neon-pour-armv8-a"},"Compilateur Arm avec Neon pour Armv8-A"),(0,a.kt)("p",null,"Options d'optimisation :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"-Ox avec x dans {0, 1, 2, 3, fast}"),(0,a.kt)("li",{parentName:"ul"},"La vectorisation automatique est activ\xe9e par d\xe9faut au niveau d'optimisation -O2 et sup\xe9rieur L'option -fno-vectorize permet de d\xe9sactiver la vectorisation automatique."),(0,a.kt)("li",{parentName:"ul"},"Au niveau d'optimisation -O1, la vectorisation automatique est d\xe9sactiv\xe9e par d\xe9faut, l'option -fvectorize permet d'activer la vectorisation automatique."),(0,a.kt)("li",{parentName:"ul"},"Au niveau d'optimisation -O0, la vectorisation automatique est toujours d\xe9sactiv\xe9e.Si vous sp\xe9cifiez l'option -fvectorize, le compilateur l'ignore."),(0,a.kt)("li",{parentName:"ul"},"La sp\xe9cification des options de compilateur -Rpass=loop et -Rpass-analysis=loop affiche des informations de diagnostic et d'analyse utiles.")),(0,a.kt)("p",null,"Sp\xe9cifiez la cible Neon :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"L'option -mcpu=native est une combinaison de -march et -mtune, elle sp\xe9cifie simultan\xe9ment l'architecture cible et optimise pour une microarchitecture donn\xe9e.")),(0,a.kt)("p",null,"Plus d'informations ici :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://developer.arm.com/documentation/101725/0300/Coding-for-Neon"},"https://developer.arm.com/documentation/101725/0300/Coding-for-Neon"))),(0,a.kt)("h2",{id:"compilateur-nvhpc-avec-neon-pour-armv8-a"},"Compilateur NVHPC avec Neon pour Armv8-A"),(0,a.kt)("p",null,"Options d'optimisation :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"-Ox avec x dans {0, 1, 2, 3, 4} et -fast"),(0,a.kt)("li",{parentName:"ul"},"La g\xe9n\xe9ration de code SIMD est activ\xe9e par d\xe9faut au niveau d'optimisation -O2 et sup\xe9rieur."),(0,a.kt)("li",{parentName:"ul"},"Au niveau d'optimisation -O1, des optimisations locales sont effectu\xe9es (allocations de registre)"),(0,a.kt)("li",{parentName:"ul"},"Au niveau d'optimisation -O0, aucune optimisation n'est effectu\xe9e."),(0,a.kt)("li",{parentName:"ul"},"La sp\xe9cification des options du compilateur \u2013Minfo affiche des informations de diagnostic et d'analyse utiles.")),(0,a.kt)("p",null,"Sp\xe9cifiez la cible Neon :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"-tp=native|neoverse-n1 est utilis\xe9 pour sp\xe9cifier une cible CPU.")),(0,a.kt)("p",null,"Plus d'informations ici :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.nvidia.com/hpc-sdk/compilers/index.html"},"https://docs.nvidia.com/hpc-sdk/compilers/index.html"))))}m.isMDXComponent=!0}}]);